.div1 {
    width: 100px;
    height: 100px;
    background-color: aquamarine;
}

/* 
    :hover : 요소에 마우스를 올렸을 때
*/
.div1:hover {
    background-color: hotpink;
    width: 150px;
    height: 150px;
}

/* 
    :active : 요소를 마우스로 클릭하고 있을 때
*/
.div1:active {
    background-color: brown;
    width: 200px;
}

/* 
    :focus : 요소에 포커스가 됐을 때
*/
input:focus {
    background-color: violet;
    color: lightblue;
    outline-color: yellowgreen;
}

.links > a:hover {
    background-color: coral;
}

.links > a:visited {
    color: red;
}

/* 요소 상황에 따른 가상 클래스 선택자 */
.zoo > * {
    background-color: green;
    color: white;
}

/* 1. E:first-child : E(요소)가 첫 번째 요소라면 */
.zoo > *:first-child { 
    /* *는 생략 혹은 h1으로 변경 가능하며, div로 바꾸면 선택이 되지 않는다.*/
    background-color: red
}

/* 2. E:last-child : E(요소)가 마자막 요소라면 */
.zoo > li:last-child {
    background-color: black;
}

/* 3. E:nth-child(n) : E(요소)가 n번째 요소라면 */
.zoo > *:nth-child(2) {
    background-color: aqua;
}

/* 4. E:not(XYZ) : xzy가 아닌 E(요소) 선택 */
.zoo > *:not(div){
    background-color: pink;
}

/* 가상요소 : before, after */
.box::after {
    content: " 빨리";
    color: blue !important;
}

.box::before {
    content: "택시 ";
    color: red;
}

.box::after {
    content: " 빨리";
    color: green;
}

/* 
    - HTML 문서의 특정 부분을 스타일링하기 위해 사용.
    - 실제로 HTML 문서에 존재하지 않는 부분이지만 CSS를 통해 스타일 적용이 가능.

    Q) 가상 클래스 :& 가상요소 :: 차이?
    A) CSS 사양이 발전하면서 가상 클래스와 가상 요소를 명확하게 구분할 필요성이 생김.
    가상 클래스 - 문서의 기존 요소 상태를 나타냄.
    가상 요소 - 문서의 특정 부분을 생성하여 스타일링함.
    그렇게에, 구분을 위해 ::로 표기하는 새로운 표기법을 도입.
*/